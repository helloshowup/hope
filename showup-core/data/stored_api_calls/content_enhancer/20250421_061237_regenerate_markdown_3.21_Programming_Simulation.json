{
  "file": "3.21_Programming_Simulation.md",
  "request_type": "regenerate_markdown",
  "markdown_text": "# 3.21\n# Programming Simulation\n\n**This lesson could be followed by this game:**\nProgramming Simulation: Robot Path Planner where students create a sequence of movement commands to navigate a virtual robot through an obstacle course. For example, students could be given a grid-based environment with obstacles and a target location, then must use directional commands, loops, and conditionals to guide their robot successfully to the goal while avoiding obstacles.\n\n\n\n\n",
  "instructions": "# Markdown Formatting Expert Prompt\n\nYou are a markdown formatting expert who makes precise, surgical edits to educational content. Your task is to make five specific types of formatting changes without altering any other content:\n\n## Transformation Types\n\n### 1. Bold Formatting for Key Terms\n\nAdd bold formatting to key terms, particularly headers and important concept labels.\n\n**Example:**\n```markdown\nMisconception #1: \"All robots look like humans.\"\n```\n\n**Transformed to:**\n```markdown\n**Misconception #1:** \"All robots look like humans.\"\n```\n\n\n## Pattern Recognition Instructions\n\n### For Bold Formatting:\n1. Look for section headers, titles, or key concept labels\n2. Add bold formatting to these elements using markdown's double asterisks `**text**`\n3. Pay special attention to numbered items like \"Misconception #1:\" or similar patterns\n\n## Transformation Process\n\n### For Bold Formatting:\n1. Identify key terms that require bold formatting\n2. Add `**` before and after the term to apply bold formatting\n3. Ensure no other text is inadvertently included in the bold formatting\n\n\n## Edge Case Handling\n\n### For Bold Formatting:\n- Only bold the specific term or header, not surrounding text\n- If a term is already bold, do not modify it\n- When in doubt about whether to bold a term, prioritize consistency with other similar terms in the document\n\n\n## Critical Preservation Guidelines\n\n1. **DO NOT change any content** except for adding the specified markers, bold formatting, and paragraph breaks\n2. **DO NOT alter existing formatting** such as italics, lists, or other markdown elements\n3. **DO NOT remove or add any text** other than the specified markers and paragraph breaks\n4. **DO NOT change headings** or modify the document structure in any way\n5. **DO NOT add extra spaces or lines** between the markers and the content\n6. **DO ensure that each paragraph is separated by exactly one empty line** - not multiple empty lines\n7. **DO NOT apply multiple transformations to the same text** conflictingly - if text is already part of a special section, do not additionally bold it unless it's a key term within that section\n8. **DO preserve the logical flow and organization** of the content while ensuring proper formatting\n9. **DO ensure all markers are on their own lines** with no text before or after them\n10. **DO apply all five transformations harmoniously** so they don't conflict with each other\n\n## Verification Process\n\nAfter completing all transformations:\n1. Compare the total word count of the original and transformed documents (excluding markers) - they should match\n2. Verify all special sections have been properly transformed with correct opening and closing markers\n3. Verify all key terms have been properly bolded\n4. Confirm that proper paragraph breaks (empty lines) exist between paragraphs\n5. Verify that page breaks are added at logical points and not excessively\n6. Confirm that no content has been altered other than adding the markers, bold formatting, and paragraph breaks\n7. Validate that the overall document structure remains intact with improved readability\n8. Check that all special sections have both opening and closing markers\n9. Ensure that no markers conflict with each other or create formatting issues\n\n\nYour edits should be surgical and minimally invasive, preserving the original content while adding only the required formatting markers where needed.\n\n\n",
  "context": "# Preparatory Context for Content Enhancement\n\n## Content Summary\nThe current content is a brief description of a potential programming simulation exercise focused on robot path planning. It outlines a scenario where students would create a sequence of commands to navigate a virtual robot through an obstacle course, using directional commands, loops, and conditionals.\n\n## Enhancement Requirements\nThe key requirements for enhancing this content are:\n\n1. Add bold formatting to key terms, particularly headers and important concept labels.\n2. Ensure the content is appropriate for the target 11-14 year old audience in terms of language, complexity, and engagement.\n3. Optimize the content for asynchronous online delivery, with clear structure, visual elements, and strategies to maintain student interest.\n\n## Target Learner Considerations\n- **Age Range:** 11-14 years old (grades 6-8)\n- **Reading Level:** 5th-6th grade on Flesch-Kincaid scale\n- **Prior Knowledge:** Varying exposure to STEM concepts, possibly first formal robotics exposure\n- **Learning Style:** Visual demonstrations, simple explanations, hands-on activities\n\nThe content should use everyday language familiar to 11-12 year olds, with short sentences, active voice, and minimal jargon. Concepts should be broken into clear, bite-sized chunks with frequent headings, bullet points, and visual aids to support understanding.\n\n## Learning Medium Considerations\nThe content will be delivered through Excel Middle School's asynchronous online curriculum, with no peer interaction. This means the content must be self-contained and engaging, with a focus on clear instructions, visual demonstrations, and opportunities for students to actively process the information.\n\n## Key Considerations\n- Maintain the core purpose and structure of the programming simulation exercise.\n- Ensure the content is appropriately adapted for the target 11-14 year old audience in terms of language, complexity, and engagement.\n- Optimize the content for asynchronous online delivery, with clear structure, visual elements, and strategies to maintain student interest.\n- Preserve the original intent and value of the programming simulation while enhancing it for the target learner.\n\n## Suggested Approach\n1. **Bold Key Terms:** Add bold formatting to headers, important concept labels, and any other key terms that should be emphasized.\n2. **Simplify Language:** Rewrite the content using 5th-6th grade level language, with shorter sentences, active voice, and minimal jargon.\n3. **Enhance Structure:** Break the content into clear, bite-sized sections with frequent headings and subheadings. Use bullet points, numbered steps, and visual aids to support understanding.\n4. **Incorporate Engagement Strategies:** Add real-world examples, conversational tone, \"Stop and Think\" moments, and other elements to make the technical content more relatable and engaging for the target audience.\n5. **Optimize for Online Delivery:** Ensure the content is self-contained and visually appealing, with ample white space, highlighted call-out boxes, and a consistent formatting style.\n\nThe enhanced content should maintain the core purpose and value of the programming simulation exercise while being tailored to the needs and preferences of the 11-14 year old target audience in an asynchronous online learning environment.",
  "temperature": 0.0,
  "response": "# **3.21**\n# **Programming Simulation**\n\n**This lesson could be followed by this game:**\n**Programming Simulation: Robot Path Planner** where students create a sequence of movement commands to navigate a virtual robot through an obstacle course. For example, students could be given a grid-based environment with obstacles and a target location, then must use **directional commands**, **loops**, and **conditionals** to guide their robot successfully to the goal while avoiding obstacles."
}